/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import javax.swing.JOptionPane;
import model.HumanResource;
import model.HumanResourceHistory;
import java.util.regex.*;
import javax.swing.JFileChooser;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author hp
 */
public class CreateEmpJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateEmpJPanel
     */
    HumanResourceHistory history;
    public boolean flagEmail=true;
    public boolean flagPhoneNo=true;
    public boolean flagEmpID=true;
    public boolean flagEmpAge = true;
    public boolean flagEmpName = true;
    public boolean flagGender = true;
    private final JFileChooser openFileChooser;
    private BufferedImage originalBI;
    public CreateEmpJPanel(HumanResourceHistory history) {
        initComponents();
        
        this.history = history;
        lblImageShowPath.setVisible(false);
        
        openFileChooser = new JFileChooser();
        openFileChooser.setCurrentDirectory(new File("c:\\temp"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter("PNG images", "png", "jpg"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEmpId = new javax.swing.JLabel();
        lblEmpFullName = new javax.swing.JLabel();
        lblEmpAge = new javax.swing.JLabel();
        lblEmpStartDate = new javax.swing.JLabel();
        lblEmpGender = new javax.swing.JLabel();
        lblEmpTeamInfo = new javax.swing.JLabel();
        lblEmpLevel = new javax.swing.JLabel();
        lblEmpPosTitle = new javax.swing.JLabel();
        lblEmpEmail = new javax.swing.JLabel();
        lblEmpPhoneNo = new javax.swing.JLabel();
        txtEmpFullName = new javax.swing.JTextField();
        txtEmpId = new javax.swing.JTextField();
        txtEmpAge = new javax.swing.JTextField();
        txtEmpGender = new javax.swing.JTextField();
        txtEmpStartDate = new javax.swing.JTextField();
        txtEmpTeamInfo = new javax.swing.JTextField();
        txtEmpPosTitle = new javax.swing.JTextField();
        txtEmpLevel = new javax.swing.JTextField();
        txtEmpPhoneNo = new javax.swing.JTextField();
        txtEmpEmail = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnImage = new javax.swing.JButton();
        lblEmpImage = new javax.swing.JLabel();
        lblImageShow = new javax.swing.JLabel();
        lblImageShowPath = new javax.swing.JLabel();
        lblImageName = new javax.swing.JLabel();
        lblImageMessage = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(900, 700));
        setPreferredSize(new java.awt.Dimension(900, 700));

        lblEmpId.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpId.setText("Employee ID:");

        lblEmpFullName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpFullName.setText("Full Name:");

        lblEmpAge.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpAge.setText("Age:");

        lblEmpStartDate.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpStartDate.setText("Start Date:");

        lblEmpGender.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpGender.setText("Gender:");

        lblEmpTeamInfo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpTeamInfo.setText("Team Info:");

        lblEmpLevel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpLevel.setText("Level:");

        lblEmpPosTitle.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpPosTitle.setText("Position Title:");

        lblEmpEmail.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpEmail.setText("Email:");

        lblEmpPhoneNo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpPhoneNo.setText("Phone Number:");

        txtEmpFullName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmpId.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmpAge.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmpGender.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmpStartDate.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmpTeamInfo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmpPosTitle.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmpLevel.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmpPhoneNo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmpEmail.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        btnSubmit.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnImage.setText("Choose Image");
        btnImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImageActionPerformed(evt);
            }
        });

        lblEmpImage.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmpImage.setText("Employee Image:");

        lblTitle.setFont(new java.awt.Font("Calibri", 3, 36)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Add an Employee");
        lblTitle.setAutoscrolls(true);
        lblTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEmpEmail)
                    .addComponent(lblEmpId)
                    .addComponent(lblEmpFullName)
                    .addComponent(lblEmpAge)
                    .addComponent(lblEmpGender)
                    .addComponent(lblEmpStartDate)
                    .addComponent(lblEmpLevel)
                    .addComponent(lblEmpTeamInfo)
                    .addComponent(lblEmpPosTitle)
                    .addComponent(lblEmpPhoneNo)
                    .addComponent(lblEmpImage))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtEmpGender, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtEmpStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtEmpAge, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtEmpFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtEmpLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnImage)
                                .addComponent(btnSubmit))
                            .addComponent(txtEmpTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtEmpPosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEmpPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtEmpEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblImageName)
                    .addComponent(lblImageShowPath)
                    .addComponent(lblImageShow, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblImageMessage))
                .addContainerGap(162, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnImage, txtEmpAge, txtEmpEmail, txtEmpFullName, txtEmpGender, txtEmpId, txtEmpLevel, txtEmpPhoneNo, txtEmpPosTitle, txtEmpStartDate, txtEmpTeamInfo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblImageMessage, lblImageName, lblImageShow, lblImageShowPath});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblImageShow, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(lblImageShowPath, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(lblImageName)
                        .addGap(111, 111, 111)
                        .addComponent(lblImageMessage))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmpFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmpFullName))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmpId))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEmpGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmpGender))
                                .addGap(10, 10, 10))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEmpAge)
                                    .addComponent(lblEmpAge))
                                .addGap(53, 53, 53)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmpStartDate)
                            .addComponent(txtEmpStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmpLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmpLevel))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmpTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmpTeamInfo))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmpPosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmpPosTitle))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmpPhoneNo)
                            .addComponent(txtEmpPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmpEmail)
                            .addComponent(txtEmpEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnImage)
                            .addComponent(lblEmpImage))))
                .addGap(10, 10, 10)
                .addComponent(btnSubmit)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnImage, txtEmpAge, txtEmpEmail, txtEmpFullName, txtEmpGender, txtEmpId, txtEmpLevel, txtEmpPhoneNo, txtEmpPosTitle, txtEmpStartDate, txtEmpTeamInfo});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblImageMessage, lblImageName, lblImageShowPath});

    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (txtEmpFullName.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee Full Name is Mandatory");
        }else if(txtEmpId.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee ID is Mandatory");
        }else if(txtEmpAge.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee Age is Mandatory");
        }else if(txtEmpGender.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee Gender is Mandatory");
        }else if(txtEmpStartDate.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee Start Date is Mandatory");
        }else if(txtEmpLevel.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee Level is Mandatory");
        }else if(txtEmpTeamInfo.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee Team Info is Mandatory");
        }else if(txtEmpPosTitle.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee Title is Mandatory");
        }else if(txtEmpPhoneNo.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee Phone Number is Mandatory");
        }else if(txtEmpEmail.getText().length()==0){
            JOptionPane.showMessageDialog(this, "Employee Email is Mandatory");
        }else if(lblImageShowPath.getText().length() == 0){
            JOptionPane.showMessageDialog(this, "Employee Image is Mandatory");
        }else {
            if(txtEmpEmail.getText().length() > 0){
                flagEmail = true;
                String regex = "^[A-Za-z0-9+_.-]+@(.+)$";
                Pattern pattern = Pattern.compile(regex);
                Matcher matcher = pattern.matcher(txtEmpEmail.getText());
                if(!matcher.matches()){
                    JOptionPane.showMessageDialog(this, "Employee Email is not correct");
                    txtEmpEmail.setText("");
                    flagEmail = false;
                }
                else{
                    for(HumanResource hr : history.getHistory()){
                        Object[] row = new Object[3];
                        row[0] = hr.getEmpEmail();
//                        row[1] = hr.getEmpId();
//                        row[2] = hr.getEmpPhNumber();
                        if(row[0].equals(txtEmpEmail.getText())){
                            JOptionPane.showMessageDialog(this, "Employee Email already exists");
                            flagEmail = false;
                        }
                    }
                }
            }
            if(txtEmpPhoneNo.getText().length() > 0){
                flagPhoneNo = true;
                String regex = "^\\d{10}$";
                Pattern pattern = Pattern.compile(regex);
                Matcher matcher = pattern.matcher(txtEmpPhoneNo.getText());
                if(!matcher.matches()){
                    JOptionPane.showMessageDialog(this, "Employee Phone number is not correct");
                    flagPhoneNo = false;
                }
                else{
                    for(HumanResource hr : history.getHistory()){
                        Object[] row = new Object[1];
                        row[0] = hr.getEmpPhNumber();
                        if(row[0].equals(txtEmpPhoneNo.getText())){
                            JOptionPane.showMessageDialog(this, "Employee Phone number already exists");
                            flagPhoneNo = false;
                        }
                    }
            }
            }
            if(txtEmpAge.getText().length() > 0){
                try{
                    flagEmpAge = true;
                    if(Integer.parseInt(txtEmpAge.getText())<=0){
                        JOptionPane.showMessageDialog(this, "Employee Age is not correct");
                        flagEmpAge = false;
                    }
                }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(this, "Employee Age is not correct");
                    flagEmpAge = false;
                }
            }
            if(txtEmpFullName.getText().length() > 0){
                flagEmpName = true;
//                System.out.println(txtEmpFullName.getText());
                String str = txtEmpFullName.getText();
                boolean ans = str.matches("[a-zA-Z ]+");
//                System.out.println(ans);
                if(!ans){
                    JOptionPane.showMessageDialog(this, "Employee Full Name is not correct");
                    flagEmpName = false;
                }
            }
            if(txtEmpGender.getText().length() > 0){
                flagGender = true;
//                System.out.println(txtEmpGender.getText());
                String str = txtEmpGender.getText();
                boolean ans = str.matches("[a-zA-Z- ]+");
//                System.out.println(ans);
                if(!ans){
                    JOptionPane.showMessageDialog(this, "Employee Gender is not correct");
                    flagGender = false;
                }
            }
            if(txtEmpId.getText().length() > 0){
                flagEmpID = true;
                for(HumanResource hr : history.getHistory()){
                    Object[] row = new Object[1];
                    row[0] = hr.getEmpId();
                    if(row[0].equals(txtEmpId.getText())){
                        JOptionPane.showMessageDialog(this, "Employee ID already exists");
                        flagEmpID = false;
                    }
                }
            }
            if(flagEmail && flagPhoneNo && flagEmpID && flagEmpAge && flagEmpName && flagGender){
                String empFullName = txtEmpFullName.getText();
                String empId = txtEmpId.getText();
                int empAge = Integer.parseInt(txtEmpAge.getText());
                String empGender = txtEmpGender.getText();
                String empStartDate = txtEmpStartDate.getText();
                String empLevel = txtEmpLevel.getText();
                String empTeamInfo = txtEmpTeamInfo.getText();
                String empTitle = txtEmpPosTitle.getText();
                String empPhNumber = txtEmpPhoneNo.getText();
                String empEmail = txtEmpEmail.getText();
                String empImage = lblImageShowPath.getText();

                HumanResource hr = history.addNewEmpDetails();

                hr.setEmpFullName(empFullName);
                hr.setEmpId(empId);
                hr.setEmpAge(empAge);
                hr.setEmpGender(empGender);
                hr.setEmpStartDate(empStartDate);
                hr.setEmpLevel(empLevel);
                hr.setEmpTeamInfo(empTeamInfo);
                hr.setEmpTitle(empTitle);
                hr.setEmpPhNumber(empPhNumber);
                hr.setEmpEmail(empEmail);
                hr.setEmpImage(empImage);

                JOptionPane.showMessageDialog(this, "New Employee Added Successfully!!");

                txtEmpFullName.setText("");
                txtEmpId.setText("");
                txtEmpAge.setText("");
                txtEmpGender.setText("");
                txtEmpStartDate.setText("");
                txtEmpLevel.setText("");
                txtEmpTeamInfo.setText("");
                txtEmpPosTitle.setText("");
                txtEmpPhoneNo.setText("");
                txtEmpEmail.setText("");
                lblImageShowPath.setText("");
                lblImageShow.setIcon(null);
                lblImageName.setText("");
                lblImageMessage.setText("");
            }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImageActionPerformed
        // TODO add your handling code here:
        int imageVal = openFileChooser.showOpenDialog(this);
        
        if(imageVal == JFileChooser.APPROVE_OPTION) {
        try {
            originalBI = ImageIO.read(openFileChooser.getSelectedFile());
            lblImageMessage.setText("Image added Successfully!");
            String selectedImagePath = openFileChooser.getSelectedFile().getAbsolutePath();
            
            lblImageShowPath.setText(selectedImagePath);
            ImageIcon imageDisplay = new ImageIcon (selectedImagePath);
            Image image = imageDisplay.getImage();
            Image newImage = image.getScaledInstance(230, 170, Image.SCALE_DEFAULT);
            imageDisplay = new ImageIcon(newImage);
            lblImageShow.setIcon(imageDisplay);
            lblImageName.setText(txtEmpFullName.getText());
        } catch(IOException ioe){
            lblImageMessage.setText("Failed to load Image!");
            
        }
       }
        else {
            lblImageMessage.setText("No File Chosen!");
        }
    }//GEN-LAST:event_btnImageActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImage;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblEmpAge;
    private javax.swing.JLabel lblEmpEmail;
    private javax.swing.JLabel lblEmpFullName;
    private javax.swing.JLabel lblEmpGender;
    private javax.swing.JLabel lblEmpId;
    private javax.swing.JLabel lblEmpImage;
    private javax.swing.JLabel lblEmpLevel;
    private javax.swing.JLabel lblEmpPhoneNo;
    private javax.swing.JLabel lblEmpPosTitle;
    private javax.swing.JLabel lblEmpStartDate;
    private javax.swing.JLabel lblEmpTeamInfo;
    private javax.swing.JLabel lblImageMessage;
    private javax.swing.JLabel lblImageName;
    private javax.swing.JLabel lblImageShow;
    private javax.swing.JLabel lblImageShowPath;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtEmpAge;
    private javax.swing.JTextField txtEmpEmail;
    private javax.swing.JTextField txtEmpFullName;
    private javax.swing.JTextField txtEmpGender;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtEmpLevel;
    private javax.swing.JTextField txtEmpPhoneNo;
    private javax.swing.JTextField txtEmpPosTitle;
    private javax.swing.JTextField txtEmpStartDate;
    private javax.swing.JTextField txtEmpTeamInfo;
    // End of variables declaration//GEN-END:variables
}
